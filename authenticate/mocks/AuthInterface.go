// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	authenticate "github.com/ONSdigital/blaise-cawi-portal/authenticate"
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"

	sessions "github.com/gin-contrib/sessions"
)

// AuthInterface is an autogenerated mock type for the AuthInterface type
type AuthInterface struct {
	mock.Mock
}

// Authenticated provides a mock function with given fields: _a0
func (_m *AuthInterface) Authenticated(_a0 *gin.Context) {
	_m.Called(_a0)
}

// DecryptJWT provides a mock function with given fields: _a0
func (_m *AuthInterface) DecryptJWT(_a0 interface{}) (*authenticate.UACClaims, error) {
	ret := _m.Called(_a0)

	var r0 *authenticate.UACClaims
	if rf, ok := ret.Get(0).(func(interface{}) *authenticate.UACClaims); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*authenticate.UACClaims)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Login provides a mock function with given fields: _a0, _a1
func (_m *AuthInterface) Login(_a0 *gin.Context, _a1 sessions.Session) {
	_m.Called(_a0, _a1)
}

// Logout provides a mock function with given fields: _a0, _a1
func (_m *AuthInterface) Logout(_a0 *gin.Context, _a1 sessions.Session) {
	_m.Called(_a0, _a1)
}
