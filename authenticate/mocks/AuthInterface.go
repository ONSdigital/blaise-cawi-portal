// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	authenticate "github.com/ONSdigital/blaise-cawi-portal/authenticate"
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"

	sessions "github.com/gin-contrib/sessions"
)

// AuthInterface is an autogenerated mock type for the AuthInterface type
type AuthInterface struct {
	mock.Mock
}

// Authenticated provides a mock function with given fields: _a0
func (_m *AuthInterface) Authenticated(_a0 *gin.Context) {
	_m.Called(_a0)
}

// HasSession provides a mock function with given fields: _a0
func (_m *AuthInterface) HasSession(_a0 *gin.Context) (bool, *authenticate.UACClaims) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*gin.Context) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 *authenticate.UACClaims
	if rf, ok := ret.Get(1).(func(*gin.Context) *authenticate.UACClaims); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*authenticate.UACClaims)
		}
	}

	return r0, r1
}

// Login provides a mock function with given fields: _a0, _a1
func (_m *AuthInterface) Login(_a0 *gin.Context, _a1 sessions.Session) {
	_m.Called(_a0, _a1)
}

// Logout provides a mock function with given fields: _a0, _a1
func (_m *AuthInterface) Logout(_a0 *gin.Context, _a1 sessions.Session) {
	_m.Called(_a0, _a1)
}
