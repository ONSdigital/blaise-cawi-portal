// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	busapi "github.com/ONSdigital/blaise-cawi-portal/busapi"
	mock "github.com/stretchr/testify/mock"
)

// BusApiInterface is an autogenerated mock type for the BusApiInterface type
type BusApiInterface struct {
	mock.Mock
}

// GetUacInfo provides a mock function with given fields: _a0
func (_m *BusApiInterface) GetUacInfo(_a0 string) (busapi.UacInfo, error) {
	ret := _m.Called(_a0)

	var r0 busapi.UacInfo
	if rf, ok := ret.Get(0).(func(string) busapi.UacInfo); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(busapi.UacInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IncrementPostcodeAttempts provides a mock function with given fields: _a0
func (_m *BusApiInterface) IncrementPostcodeAttempts(_a0 string) (busapi.UacInfo, error) {
	ret := _m.Called(_a0)

	var r0 busapi.UacInfo
	if rf, ok := ret.Get(0).(func(string) busapi.UacInfo); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(busapi.UacInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ResetPostcodeAttempts provides a mock function with given fields: _a0
func (_m *BusApiInterface) ResetPostcodeAttempts(_a0 string) (busapi.UacInfo, error) {
	ret := _m.Called(_a0)

	var r0 busapi.UacInfo
	if rf, ok := ret.Get(0).(func(string) busapi.UacInfo); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(busapi.UacInfo)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
